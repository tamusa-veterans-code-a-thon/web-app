import '@firebase/app';
import '@firebase/util';
export { ar as ActionCodeURL, Y as AuthCredential, Z as EmailAuthCredential, a2 as EmailAuthProvider, a3 as FacebookAuthProvider, a5 as GithubAuthProvider, a4 as GoogleAuthProvider, $ as OAuthCredential, a6 as OAuthProvider, a0 as PhoneAuthCredential, P as PhoneAuthProvider, I as PhoneMultiFactorGenerator, R as RecaptchaVerifier, a7 as SAMLAuthProvider, a8 as TwitterAuthProvider, ag as applyActionCode, i as browserLocalPersistence, H as browserPopupRedirectResolver, k as browserSessionPersistence, ah as checkActionCode, af as confirmPasswordReset, aj as createUserWithEmailAndPassword, T as debugErrorMap, Q as deleteUser, ao as fetchSignInMethodsForEmail, az as getAdditionalUserInfo, s as getAuth, aw as getIdToken, ax as getIdTokenResult, aB as getMultiFactorResolver, G as getRedirectResult, a1 as inMemoryPersistence, t as indexedDBLocalPersistence, W as initializeAuth, am as isSignInWithEmailLink, ab as linkWithCredential, v as linkWithPhoneNumber, z as linkWithPopup, D as linkWithRedirect, aC as multiFactor, L as onAuthStateChanged, K as onIdTokenChanged, as as parseActionCodeURL, V as prodErrorMap, ac as reauthenticateWithCredential, w as reauthenticateWithPhoneNumber, B as reauthenticateWithPopup, E as reauthenticateWithRedirect, aA as reload, ap as sendEmailVerification, ae as sendPasswordResetEmail, al as sendSignInLinkToEmail, J as setPersistence, a9 as signInAnonymously, aa as signInWithCredential, ad as signInWithCustomToken, ak as signInWithEmailAndPassword, an as signInWithEmailLink, u as signInWithPhoneNumber, y as signInWithPopup, C as signInWithRedirect, O as signOut, ay as unlink, N as updateCurrentUser, au as updateEmail, av as updatePassword, x as updatePhoneNumber, at as updateProfile, X as useAuthEmulator, M as useDeviceLanguage, aq as verifyBeforeUpdateEmail, ai as verifyPasswordResetCode } from './index-558976c1.js';
import '@firebase/logger';
import 'tslib';
import '@firebase/component';
//# sourceMappingURL=index.js.map
